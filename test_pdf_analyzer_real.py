#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ PDF –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
"""

import sys
import os
sys.path.append('backend')

from app.utils.pdf_analyzer import PDFAnalyzer

def test_pdf_analyzer():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç PDF –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö"""
    
    print("=== –¢–µ—Å—Ç PDF –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö ===")
    
    # –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º
    test_docs_dir = "../test_docs"
    
    if not os.path.exists(test_docs_dir):
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {test_docs_dir}")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    analyzer = PDFAnalyzer()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö PDF —Ñ–∞–π–ª–æ–≤
    pdf_files = [f for f in os.listdir(test_docs_dir) if f.endswith('.pdf')]
    
    if not pdf_files:
        print(f"‚ùå PDF —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {test_docs_dir}")
        return
    
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ PDF —Ñ–∞–π–ª–æ–≤: {len(pdf_files)}")
    print(f"üìÑ –§–∞–π–ª—ã: {pdf_files}")
    print()
    
    for pdf_file in pdf_files:
        pdf_path = os.path.join(test_docs_dir, pdf_file)
        print(f"üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª: {pdf_file}")
        
        try:
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞–∂–¥–æ–≥–æ PDF
            layout_info = analyzer.analyze_page_layout(pdf_path, 0)
            
            print(f"  üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:")
            print(f"    - –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {layout_info.get('page_number', 'N/A')}")
            print(f"    - –†–∞–∑–º–µ—Ä—ã: {layout_info.get('page_width', 'N/A')} x {layout_info.get('page_height', 'N/A')} —Ç–æ—á–µ–∫")
            print(f"    - –û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è: {'Landscape' if layout_info.get('is_landscape') else 'Portrait'}")
            print(f"    - –í–µ—Ä—Ö–Ω–∏–π –∫—Ä–∞–π —à—Ç–∞–º–ø–∞: {layout_info.get('stamp_top_edge', '–Ω–µ –Ω–∞–π–¥–µ–Ω')}")
            print(f"    - –ü—Ä–∞–≤—ã–π –∫—Ä–∞–π —Ä–∞–º–∫–∏: {layout_info.get('right_frame_edge', '–Ω–µ –Ω–∞–π–¥–µ–Ω')}")
            print(f"    - –ù–∏–∂–Ω–∏–π –∫—Ä–∞–π —Ä–∞–º–∫–∏: {layout_info.get('bottom_frame_edge', '–Ω–µ –Ω–∞–π–¥–µ–Ω')}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è landscape —Å—Ç—Ä–∞–Ω–∏—Ü
            if layout_info.get("is_landscape"):
                print(f"  üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è –¥–ª—è landscape —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
                
                stamp_top = analyzer.detect_stamp_top_edge_landscape(pdf_path, 0)
                print(f"    - –î–µ—Ç–µ–∫—Ü–∏—è —à—Ç–∞–º–ø–∞: {stamp_top if stamp_top else '–Ω–µ –Ω–∞–π–¥–µ–Ω'}")
                
                right_frame = analyzer.detect_right_frame_edge(pdf_path, 0)
                print(f"    - –î–µ—Ç–µ–∫—Ü–∏—è –ø—Ä–∞–≤–æ–π —Ä–∞–º–∫–∏: {right_frame if right_frame else '–Ω–µ –Ω–∞–π–¥–µ–Ω'}")
                
                bottom_frame = analyzer.detect_bottom_frame_edge(pdf_path, 0)
                print(f"    - –î–µ—Ç–µ–∫—Ü–∏—è –Ω–∏–∂–Ω–µ–π —Ä–∞–º–∫–∏: {bottom_frame if bottom_frame else '–Ω–µ –Ω–∞–π–¥–µ–Ω'}")
            
            print(f"  ‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {str(e)}")
        
        print()

if __name__ == "__main__":
    test_pdf_analyzer()
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ===")
