#!/bin/bash

echo "üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º..."

# Backend –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Ä–µ–∑ Docker
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ backend..."
cd backend
docker-compose exec backend black . || echo "‚ö†Ô∏è  Black –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
docker-compose exec backend isort . || echo "‚ö†Ô∏è  isort –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –∏–º–ø–æ—Ä—Ç–æ–≤"
docker-compose exec backend flake8 . || echo "‚ö†Ô∏è  flake8 –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ª–∏–Ω—Ç–∏–Ω–≥"
docker-compose exec backend mypy app/ || echo "‚ö†Ô∏è  mypy –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–æ–≤"
docker-compose exec backend pytest || echo "‚ö†Ô∏è  pytest –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã"

# Frontend –ø—Ä–æ–≤–µ—Ä–∫–∏
echo "üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend..."
cd ../frontend
npm install
npm run lint || echo "‚ö†Ô∏è  –õ–∏–Ω—Ç–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
npm run format:check || echo "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
npm run type-check || echo "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
npm test || echo "‚ö†Ô∏è  –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
npm run build || echo "‚ùå –°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"

echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"