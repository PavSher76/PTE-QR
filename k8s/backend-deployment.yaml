apiVersion: apps/v1
kind: Deployment
metadata:
  name: pte-qr-backend
  namespace: pte-qr
  labels:
    app: pte-qr-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pte-qr-backend
  template:
    metadata:
      labels:
        app: pte-qr-backend
    spec:
      containers:
      - name: backend
        image: ghcr.io/your-org/pte-qr-backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: pte-qr-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: pte-qr-secrets
              key: redis-url
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: pte-qr-secrets
              key: jwt-secret
        - name: ENOVIA_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: pte-qr-config
              key: enovia-base-url
        - name: ENOVIA_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: pte-qr-secrets
              key: enovia-client-id
        - name: ENOVIA_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: pte-qr-secrets
              key: enovia-client-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: pte-qr-backend-service
  namespace: pte-qr
  labels:
    app: pte-qr-backend
spec:
  selector:
    app: pte-qr-backend
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
